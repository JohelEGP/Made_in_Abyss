language: cpp
dist: xenial

env:
  global:
  - PATH=/tmp/bin:$PATH
  - LD_LIBRARY_PATH=/tmp/lib:$LD_LIBRARY_PATH
  - CMAKE_CXX_FLAGS="-Wpedantic -Wall -Wextra"

matrix:
  include:
  #- os: linux
    #compiler: gcc
    #addons:
      #apt:
        #sources:
        #- ubuntu-toolchain-r-test
        #- sourceline: 'ppa:mhier/libboost-latest'
        #packages:
        #- g++-8
        #- boost1.67
    #env:
    #- MATRIX_EVAL="CXX=g++-8"
  #- os: linux
    #compiler: clang
    #addons:
      #apt:
        #sources:
        #- ubuntu-toolchain-r-test
        #- sourceline: 'ppa:mhier/libboost-latest'
        #packages:
        #- g++-8
        #- boost1.67
    #env:
    #- MATRIX_EVAL="CLANG_VERSION=6.0.0"
  #- os: linux
    #compiler: clang
    #addons:
      #apt:
        #sources:
        #- sourceline: 'ppa:mhier/libboost-latest'
        #packages:
        #- boost1.67
    #env:
    #- MATRIX_EVAL="CLANG_VERSION=6.0.0 && USE_LIBCXX=1"
  #- os: linux
    #compiler: clang
    #addons:
      #apt:
        #sources:
        #- ubuntu-toolchain-r-test
        #- sourceline: 'ppa:mhier/libboost-latest'
        #packages:
        #- g++-8
        #- boost1.67
  - os: linux
    compiler: clang
    addons:
      apt:
        sources:
        - sourceline: 'ppa:mhier/libboost-latest'
        packages:
        - boost1.67
    env:
    - MATRIX_EVAL="USE_LIBCXX=1"

before_script:
- eval "${MATRIX_EVAL}"
- travis/install_cmake.sh
- |
  if [ -n "$CLANG_VERSION" ]; then
    travis/install_clang.sh ${CLANG_VERSION}
  fi
- |
  if [ -n "$USE_LIBCXX" ]; then
    CMAKE_CXX_FLAGS="$CMAKE_CXX_FLAGS -stdlib=libc++"
    CMAKE_EXE_LINKER_FLAGS=-lc++abi
  fi

script:
- cmake -E make_directory build
- cmake -E chdir build cmake .. -DCMAKE_CXX_FLAGS="$CMAKE_CXX_FLAGS" -DCMAKE_EXE_LINKER_FLAGS="$CMAKE_EXE_LINKER_FLAGS" -DMIA_TEST_EXTENSIVELY=Off
- cmake --build build -j 2
- cmake -E chdir build ctest -E unitLibTest -j 2 --V
# See nholthaus/units#135.   ^~~~~~~~~~~~~~

notifications:
  email: false
